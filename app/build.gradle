plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "com.google.dagger.hilt.android"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-parcelize"
}

android {
    namespace "com.example.newsproject"
    compileSdk 33

    defaultConfig {
        applicationId "com.example.newsproject"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    //androidx and jetpack libraries
    implementation "androidx.core:core-ktx:$androidXCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidXAppCompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    //dagger hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //glide image loading
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    //Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test.ext:junit:$extJunitVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestRunnderVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}